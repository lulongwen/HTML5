@charset "utf-8";
body{
	background: #123;
    color: #333;
    font-size: 11px;
    height: auto;
    padding-bottom: 20px;
}
*{
	box-sizing:border-box;
}

/* ==960px 栅格系统
	1： 设置容器：.gridgs 的 width:960px，
		左右两侧为 auto, 简单设置- margin: 0 auto，
			页面实际宽度 940px

	2： 为栅格命名，.grid-* ( 1 - 12 例如：.grid-1 ),
					.column-* 作为前缀，数字作为后缀，表示三个的列数

	3：	设置栅格的全局属性：
			左浮动（float:left），（display:inline; 是为了兼容 IE 6 & 7）
			设置左右两侧的外边距 为 10px，(margin-left:10px; margin-right:10px;)
			每个栅格的宽度应该是 960px 除以 12列 = 80px，
			左右margin值 10px，每个栅格的宽度是 60px，
				gird-n 的宽度 = (80*n - 20)

					16列 demo：
					960px, 每列 左右边距 10px
					960 / 16 = 60px; 60 - 20 = 40px 
					列宽 = （60px * n）-20px

					24列，每列 左右边距 5px

	4： 左边距 .grid-ml-* , .grid-ml-2
		  （1 ~ 12）  每个栅格的margin-left值

	5： 左偏移 .grid-left-* , .grid-left-6
		（1 ~ 12）  每个栅格的相对定位 left 值

	6： .clearfix  清除浮动

 */


// width = 960px / 12 = 80px -左右边距 10px * 2 = 60px;
@width: 80px;  // 960/12 = 80px;

.gridgs{
	width:960px;
	margin-left:auto;
	margin-right:auto;
	background:#fff url(960.gif) repeat-y center;

	// 分别设置栅格的宽度
	.grid-1{
		width: (@width * 1) - 20; // 60px, gird-n 的宽度 = (80*n - 20)
	}
	.grid-2{
		width: (@width * 2) - 20;
	}
	.grid-3{
		width: (@width * 3) - 20;
	}
	.grid-4{
		width: (@width * 4) - 20;
	}
	.grid-5{
		width: (@width * 5) - 20;
	}
	.grid-6{
		width: (@width * 6) - 20;
	}
	.grid-7{
		width: (@width * 7) - 20;
	}
	.grid-8{
		width: (@width * 8) - 20;
	}
	.grid-9{
		width: (@width * 9) - 20;
	}
	.grid-10{
		width: (@width * 10) - 20;
	}
	.grid-11{
		width: (@width * 11) - 20;
	}
	.grid-12{
		width: (@width * 12) - 20;
	}

	// 设置栅格的margin值
	.grid-ml-1{
		margin-left: (@width * 1) + 10; // 加上左边距10px
	}
	.grid-ml-2{
		margin-left: (@width * 2) + 10;
	}
	.grid-ml-3{
		margin-left: (@width * 3) + 10;
	}
	.grid-ml-4{
		margin-left: (@width * 4) + 10;
	}
	.grid-ml-5{
		margin-left: (@width * 5) + 10;
	}
	.grid-ml-6{
		margin-left: (@width * 6) + 10;
	}
	.grid-ml-7{
		margin-left: (@width * 7) + 10;
	}
	.grid-ml-8{
		margin-left: (@width * 8) + 10;
	}
	.grid-ml-9{
		margin-left: (@width * 9) + 10;
	}
	.grid-ml-10{
		margin-left: (@width * 10) + 10;
	}
	.grid-ml-11{
		margin-left: (@width * 11) + 10;
	}
	/* .grid-ml-12{
		margin-left: (@width * 12) + 10;
	} */


	// 设置相对定位 left 值
	.grid-left-auto{
		left:auto;
	}
	.grid-left-1{
		left: (@width * 1); // 每列栅格的宽度 80px
	}
	.grid-left-2{
		left: (@width * 2);
	}
	.grid-left-3{
		left: (@width * 3);
	}
	.grid-left-4{
		left: (@width * 4);
	}
	.grid-left-5{
		left: (@width * 5);
	}
	.grid-left-6{
		left: (@width * 6);
	}
	.grid-left-7{
		left: (@width * 7);
	}
	.grid-left-8{
		left: (@width * 8);
	}
	.grid-left-9{
		left: (@width * 9);
	}
	.grid-left-10{
		left: (@width * 10);
	}
	.grid-left-11{
		left: (@width * 11);
	}


	& p{
		border: 1px solid #666;
    	overflow: hidden; 
    	padding: 10px 0;
    	text-align: center;
	}
}

// [class*="grid-"] {}

.grid-1, .grid-2, .grid-3, .grid-4,
.grid-5, .grid-6, .grid-7, .grid-8,
.grid-9, .grid-10, .grid-11, .grid-12{
	float: left;
	display: inline;
	margin-left:10px;
	margin-right:10px;
	position: relative;
}

// 清除浮动
// 浮动的元素需要清楚浮动，不建议用空标签来清除浮动（<div class="clear"></div>）
// 对需要清楚浮动的选择器来操作 
/*
	.box:before{content:"\0020"; }  "\0020"表示转义字符的空格。
	.box:after{content:"\0020";height:0;clear:both;}
 */

.clearfix::before, .clearfix:after, .gridgs::before, .gridgs::after, .grid-1::before, .grid-1::after,
.grid-2::before, .grid-2::after, .grid-3::before, .grid-3::after,
.grid-4::before, .grid-4::after, .grid-5::before, .grid-5::after,
.grid-6::before, .grid-6::after, .grid-7::before, .grid-7::after,
.grid-8::before, .grid-8::after, .grid-9::before, .grid-9::after,
.grid-10::before, .grid-10::after, .grid-11::before, .grid-11::after,
.grid-12::before, .grid-12::after{
	content:'';
	display:table;
}
.clearfix::after, .gridgs::after, .grid-1::after, .grid-2::after, .grid-3::after,
.grid-4::after, .grid-5::after, .grid-6::after, .grid-7::after,
.grid-8::after, .grid-9::after, .grid-10::after, .grid-11::after, .grid-12::after{
	clear: both;
}
/* .clearfix, .gridgs{
  zoom: 1; // for IE 6 & 7
} */


